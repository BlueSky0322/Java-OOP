/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Classes.AdminStaff;
import Classes.DataAccess;
import java.util.ArrayList;
import java.util.ListIterator;
import javax.swing.JOptionPane;

/**
 *
 * @author Ryan Ng, Sareindra
 */
public class ViewPersonnelRecords extends javax.swing.JFrame {

    /**
     * Creates new form RegisterVaxApt
     */
    private String user_type = "";
    private ArrayList<String[]> arrayList;
    private ListIterator<String[]> listIterator;
    int size;

    public ViewPersonnelRecords(String user_type) {
        initComponents();
        this.user_type = user_type;
        icPassportNoTxt.setEditable(false);
        arrayList = DataAccess.get_data("Personnel.txt");
        size = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleCard = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        backToMenuBtn = new javax.swing.JButton();
        titleCardLabel2 = new javax.swing.JLabel();
        cancelRecordBtn = new javax.swing.JButton();
        modifyRecordBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        lastBtn = new javax.swing.JButton();
        previousBtn = new javax.swing.JButton();
        firstBtn = new javax.swing.JButton();
        titleCardLabel = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        ageLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        citizenshipLabel = new javax.swing.JLabel();
        empIDLabel = new javax.swing.JLabel();
        icPassportNoLabel = new javax.swing.JLabel();
        asRBtn = new javax.swing.JRadioButton();
        hpRBtn = new javax.swing.JRadioButton();
        icPassportNoTxt = new javax.swing.JTextField();
        ageTxt = new javax.swing.JTextField();
        genderTxt = new javax.swing.JTextField();
        empIDTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleCard.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        titleCard.setText("VIEW ALL PERSONNEL RECORDS");

        searchBtn.setText("Search/View");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        backToMenuBtn.setText("Back to Menu");
        backToMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMenuBtnActionPerformed(evt);
            }
        });

        titleCardLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        titleCardLabel2.setText("Personnel Records");

        cancelRecordBtn.setText("Remove Record");
        cancelRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelREcBtnActionPerformed(evt);
            }
        });

        modifyRecordBtn.setText("Modify Record");
        modifyRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyRecordBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        lastBtn.setText("Last");
        lastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastBtnActionPerformed(evt);
            }
        });

        previousBtn.setText("Previous");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        firstBtn.setText("First");
        firstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstBtnActionPerformed(evt);
            }
        });

        titleCardLabel.setText("Enter IC Number:");

        nameLabel.setText("Name:");

        ageLabel.setText("Age:");

        genderLabel.setText("Gender (M/F):");

        citizenshipLabel.setText("Job Position:");

        empIDLabel.setText("Employee ID:");

        icPassportNoLabel.setText("IC Number:");

        asRBtn.setText("Admin Staff");
        asRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asRBtnActionPerformed(evt);
            }
        });

        hpRBtn.setText("Healthcare Personnel");
        hpRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hpRBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(previousBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(firstBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelRecordBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(modifyRecordBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backToMenuBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lastBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(98, 98, 98))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(titleCard)
                                    .addComponent(titleCardLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(titleCardLabel2)
                                            .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(genderLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(ageLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addComponent(citizenshipLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(empIDLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addComponent(icPassportNoLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(nameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ageTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genderTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(asRBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(hpRBtn))
                                    .addComponent(empIDTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(icPassportNoTxt))))
                        .addGap(65, 65, 65))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(titleCard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(titleCardLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(titleCardLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 32, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLabel)
                            .addComponent(ageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(genderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(citizenshipLabel)
                            .addComponent(asRBtn)
                            .addComponent(hpRBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empIDLabel)
                            .addComponent(empIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(nextBtn))
                            .addComponent(lastBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancelRecordBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modifyRecordBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(previousBtn)))
                        .addGap(18, 18, 18)
                        .addComponent(backToMenuBtn)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(icPassportNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(icPassportNoLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backToMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMenuBtnActionPerformed
        this.setVisible(false);
        new PersonnelMenu(this.user_type).setVisible(true);
    }//GEN-LAST:event_backToMenuBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String id = searchTxt.getText();
        String[] ary = DataAccess.get_data_by_var("Personnel.txt", id, 6, 0);

        if (!searchTxt.getText().equals("")) {
            if (ary[0] == null) {
                JOptionPane.showMessageDialog(null, "Record not found.");
                searchTxt.setText("");
            } else {
                icPassportNoTxt.setText(ary[0]);
                nameTxt.setText(ary[1]);
                ageTxt.setText(ary[2]);
                genderTxt.setText(ary[3]);
                if (ary[5].equals("Admin Staff")) {
                    asRBtn.setSelected(true);
                    hpRBtn.setSelected(false);
                } else {
                    hpRBtn.setSelected(true);
                    asRBtn.setSelected(false);
                }
                empIDTxt.setText(ary[4]);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Some fields are empty");
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void cancelREcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelREcBtnActionPerformed
        AdminStaff as = new AdminStaff();
        listIterator = as.modify_personnel_details(icPassportNoTxt.getText(), "remove").listIterator();
        clearFields();
        JOptionPane.showMessageDialog(null, "Record removed.");
    }//GEN-LAST:event_cancelREcBtnActionPerformed

    private void modifyRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyRecordBtnActionPerformed
        if (icPassportNoTxt.getText().equals("") || nameTxt.getText().equals("")
                || ageTxt.getText().equals("") || genderTxt.getText().equals("") || empIDTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Some fields are Empty!");
        } else {
            if (DataAccess.isNumeric(icPassportNoTxt.getText())) {
                String search = searchTxt.getText();
                AdminStaff as = new AdminStaff();

                String errorMessages = "";

                String name = nameTxt.getText();
                errorMessages += as.validate_age(ageTxt.getText());
                errorMessages += as.validate_gender(genderTxt.getText());
                int age = 0;
                char gender = 0;
                if (errorMessages.isEmpty()) {
                    age = Integer.parseInt(ageTxt.getText());
                    gender = genderTxt.getText().charAt(0);
                }

                as.setIc_no(icPassportNoTxt.getText());
                as.setName(name);
                errorMessages += as.validate_name();
                as.setAge(age);
                as.setGender(gender);
                if (asRBtn.isSelected()) {
                    as.setJob_position(asRBtn.getText());
                } else {
                    as.setJob_position(hpRBtn.getText());
                }
                as.setEmp_id(empIDTxt.getText());

                if (DataAccess.validate_data("Personnel.txt", empIDTxt.getText(), 4)) {
                    JOptionPane.showMessageDialog(null, "Duplicate record detected! Please try again.");
                } else {
                    if (errorMessages.isEmpty()) {
                        as.modify_personnel_details(search, "modify");
                        JOptionPane.showMessageDialog(null, "Personnel record updated.");
                    } else {
                        JOptionPane.showMessageDialog(null, errorMessages);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Invalid IC Number!");
            }
        }
    }//GEN-LAST:event_modifyRecordBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        if (icPassportNoTxt.getText().equals("") || nameTxt.getText().equals("")
                || ageTxt.getText().equals("") || genderTxt.getText().equals("") || empIDTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Some fields are Empty!");
        } else {
            if (listIterator.hasNext()) {
                String[] ary = listIterator.next();
                icPassportNoTxt.setText(ary[0]);
                nameTxt.setText(ary[1]);
                ageTxt.setText(ary[2]);
                genderTxt.setText(ary[3]);
                if (ary[5].equals("Admin Staff")) {
                    asRBtn.setSelected(true);
                    hpRBtn.setSelected(false);
                } else {
                    hpRBtn.setSelected(true);
                    asRBtn.setSelected(false);
                }
                empIDTxt.setText(ary[4]);
            } else {
                JOptionPane.showMessageDialog(null, "You reached the end of the records.");
            }
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void lastBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastBtnActionPerformed
        size = arrayList.size();
        listIterator = arrayList.listIterator(arrayList.size());
        if (listIterator.hasPrevious()) {
            String[] ary = listIterator.previous();
            icPassportNoTxt.setText(ary[0]);
            nameTxt.setText(ary[1]);
            ageTxt.setText(ary[2]);
            genderTxt.setText(ary[3]);
            if (ary[5].equals("Admin Staff")) {
                asRBtn.setSelected(true);
                hpRBtn.setSelected(false);
            } else {
                hpRBtn.setSelected(true);
                asRBtn.setSelected(false);
            }
            empIDTxt.setText(ary[4]);
        } else {
            JOptionPane.showMessageDialog(null, "You reached the start of the records.");
        }
    }//GEN-LAST:event_lastBtnActionPerformed

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
        if (icPassportNoTxt.getText().equals("") || nameTxt.getText().equals("")
                || ageTxt.getText().equals("") || genderTxt.getText().equals("") || empIDTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Some fields are Empty!");
        } else {
            if (listIterator.hasPrevious()) {
                String[] ary = listIterator.previous();
                icPassportNoTxt.setText(ary[0]);
                nameTxt.setText(ary[1]);
                ageTxt.setText(ary[2]);
                genderTxt.setText(ary[3]);
                if (ary[5].equals("Admin Staff")) {
                    asRBtn.setSelected(true);
                    hpRBtn.setSelected(false);
                } else {
                    hpRBtn.setSelected(true);
                    asRBtn.setSelected(false);
                }
                empIDTxt.setText(ary[4]);
            } else {
                JOptionPane.showMessageDialog(null, "You reached the start of the records.");
            }
        }
    }//GEN-LAST:event_previousBtnActionPerformed

    private void firstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstBtnActionPerformed
        size = arrayList.size();
        listIterator = arrayList.listIterator();
        String[] ary = listIterator.next();
        icPassportNoTxt.setText(ary[0]);
        nameTxt.setText(ary[1]);
        ageTxt.setText(ary[2]);
        genderTxt.setText(ary[3]);
        if (ary[5].equals("Admin Staff")) {
            asRBtn.setSelected(true);
            hpRBtn.setSelected(false);
        } else {
            hpRBtn.setSelected(true);
            asRBtn.setSelected(false);
        }
        empIDTxt.setText(ary[4]);
    }//GEN-LAST:event_firstBtnActionPerformed

    private void asRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asRBtnActionPerformed
        if (asRBtn.isSelected()) {
            hpRBtn.setSelected(false);
            empIDTxt.setText("AS");
        }
    }//GEN-LAST:event_asRBtnActionPerformed

    private void hpRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hpRBtnActionPerformed
        if (hpRBtn.isSelected()) {
            asRBtn.setSelected(false);
            empIDTxt.setText("HP");
        }
    }//GEN-LAST:event_hpRBtnActionPerformed

    void clearFields() {
        icPassportNoTxt.setText("");
        nameTxt.setText("");
        ageTxt.setText("");
        genderTxt.setText("");
        empIDTxt.setText("");
        asRBtn.setSelected(false);
        hpRBtn.setSelected(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPersonnelRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPersonnelRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPersonnelRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPersonnelRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPersonnelRecords("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JRadioButton asRBtn;
    private javax.swing.JButton backToMenuBtn;
    private javax.swing.JButton cancelRecordBtn;
    private javax.swing.JLabel citizenshipLabel;
    private javax.swing.JLabel empIDLabel;
    private javax.swing.JTextField empIDTxt;
    private javax.swing.JButton firstBtn;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField genderTxt;
    private javax.swing.JRadioButton hpRBtn;
    private javax.swing.JLabel icPassportNoLabel;
    private javax.swing.JTextField icPassportNoTxt;
    private javax.swing.JButton lastBtn;
    private javax.swing.JButton modifyRecordBtn;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton previousBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JLabel titleCard;
    private javax.swing.JLabel titleCardLabel;
    private javax.swing.JLabel titleCardLabel2;
    // End of variables declaration//GEN-END:variables
}
